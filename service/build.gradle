ext {
    BUILD_APPLICATION = true
    BUILD_NATIVE = false
    BUILD_TEST = false
    BUILD_FLAVORS = true
}

apply from: "${rootDir}/scripts/android-build.gradle"

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation project(':framework')
    implementation project(':monitor')
    //camerax
    rootProject.ext.cameraxDependencies.each { dependence -> implementation dependence.value }

    //标准版本不需要 machine learning 模块。
    //但service中用调用 machine learning 模块代码，需要用 compileOnly 确保编译不报错。
    //service中用到 machine learning 模块是是通过宏 BUILD_PRODUCT 来控制，无需担心运行时报错的问题。
    standardCompileOnly project(':machinelearning')

    //所有模型都打包
    mlImplementation project(':machinelearning')
    mlImplementation project(':tflite')
    mlImplementation project(':pytorch')
    mlImplementation files('../machinelearning/snpe/libs/snpe-release.aar')
    mlImplementation project(':snpe')
    mlImplementation project(':mace')

    //只打包tflite模型
    tfImplementation project(':machinelearning')
    tfImplementation project(':tflite')

    //只打包pytorch模型
    torchImplementation project(':machinelearning')
    torchImplementation project(':pytorch')

    //只打包snpe模型
    snpeImplementation project(':machinelearning')
    //gradle升级之后在module引入aar，编译报错
    //改成在module里compileOnly，在主模块里implementation才不会导致编译报错
    snpeImplementation files('../machinelearning/snpe/libs/snpe-release.aar')
    snpeImplementation project(':snpe')

    //只打包mace模型
    maceImplementation project(':machinelearning')
    maceImplementation project(':mace')
}